@article{Aldridge08,
   author    = {Leslie Aldridge},
   title     = {Memory allocation in {C}},
   journal   = {Embedded Systems Programming},
   OPTvolume = {?},
   OPTnumber = {?},
   month     = {August},
   pages     = {35--42},
   year      = {2008},
   OPTurl       =
{http://m.eet.com/media/1116392/cmp_esd0808_sm_part2.pdf},
   OPTnote   = {First appeared in 1989 in the same journal.
                Implements the Knuth algorithm in the brute form.}
}

@book{KernighanR88,
   author    = {Brian W. Kernighan and
                Dennis Ritchie},
   title     = {The {C} Programming Language, Second Edition},
   publisher = {Prentice-Hall},
   year      = {1988},
   isbn      = {0-13-110370-9},
   biburl    = {http://dblp.uni-trier.de/rec/bib/books/ph/KernighanR88},
   bibsource = {dblp computer science bibliography, http://dblp.org},
   OPTnote   = {In Section XX is given a simple memory allocator in C.}
}

@book{Knuth73a,
   author    = {Donald E. Knuth},
   title     = {The Art of Computer Programming, Volume {I:} Fundamental
Algorithms,
                2nd Edition},
   publisher = {Addison-Wesley},
   year      = {1973},
   bibsource = {dblp computer science bibliography, http://dblp.org}
}

@techreport{Lea89,
   author    = {Doug Lea},
   title     = {Some Storage Management Techniques for Container
Classes},
   institution = {SUNY Oswego and NY CASE Center and GNU},
   year      = {1989},
   type      = {FTP report},
   url       = {\url{ftp://g.oswego.edu/pub/papers/C++Report89.txt}},
   OPTnote   = {with listing}
}

@misc{IBMalloc,
   author    = {Jonathan Bartlett},
   title     = {Inside memory management},
   year      = {2004},
   type      = {Web tutorial and sources},
   howpublished =
{\url{http://www.ibm.com/developerworks/library/l-memory/sidefile.html}}
}

@misc{Lea12,
   author    = {Doug Lea},
   title     = {\texttt{dlmalloc}},
   OPTtitle     = {\texttt{dlmalloc} Memory Allocator},
   year      = {2012},
   type      = {sources},
   howpublished = {\url{ftp://gee.cs.oswego.edu/pub/misc/malloc.c}},
   OPTnote   = {Provides the listing of the DL malloc, which is a
                free-list malloc with some improvements to
                (1) keep small free chunks in some region,
                (2) early coalescing based on boundary tags.}
}

@misc{WikipediaDMA,
   author    = {Wikipedia},
   title     = {C Dynamic Memory Allocation},
   year      = {2015},
   type      = {wiki},
   address   =
{\url{https://en.wikipedia.org/wiki/C_dynamic_memory_allocation}},
   OPTnote   = {Provides the list of memory allocators used in different
implementations
                of the C standard library.}
}

@inproceedings{WilsonJNB95,
   author    = {Paul R. Wilson and
                Mark S. Johnstone and
                Michael Neely and
                David Boles},
   title     = {Dynamic Storage Allocation: {A} Survey and Critical
Review},
   booktitle = {{IWMM}},
   OPTlongbooktitle = {Memory Management, International Workshop {IWMM}
95, Kinross, UK,
                September 27-29, 1995, Proceedings},
   volume    = {986},
   year      = {1995},
   series    = {LNCS},
   pages     = {1--116},
   publisher = {Springer},
   OPTnote   = {Provides an overview of the existing techniques for
memory allocation.
                Several strategies are discussed and compared. The
techniques used to
                implement these strategies also. A lot of work about
experimental
                comparison of allocators.}
}
